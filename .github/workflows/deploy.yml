name: 🚀 Deploy to Cloudflare

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # 代码质量检查
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: |
          cd frontend && pnpm install
          cd ../backend && pnpm install

      - name: 🔍 Lint frontend
        run: cd frontend && pnpm run lint

      - name: 🔍 Lint backend
        run: cd backend && pnpm run lint

  # 测试阶段
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    needs: quality-check
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: |
          cd frontend && pnpm install
          cd ../backend && pnpm install

      - name: 🧪 Run frontend tests
        run: cd frontend && pnpm test || true

      - name: 🧪 Run backend tests
        run: cd backend && pnpm test || true

  # 前端部署到 Cloudflare Pages
  deploy-frontend:
    runs-on: ubuntu-latest
    name: 🚀 Deploy Frontend to Cloudflare Pages
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: 🏗️ Build application
        working-directory: ./frontend
        run: pnpm build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_APP_ENV: production
          
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: college-employment-survey
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          
  # 后端部署到 Cloudflare Workers
  deploy-backend:
    runs-on: ubuntu-latest
    name: 🚀 Deploy Backend to Cloudflare Workers
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        working-directory: ./backend
        run: pnpm install

      - name: 🚀 Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy
          workingDirectory: backend
          
  # 运行端到端测试
  e2e-tests:
    runs-on: ubuntu-latest
    name: End-to-End Tests
    needs: [deploy-frontend, deploy-backend]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Playwright
        run: |
          npm install -g @playwright/test
          npx playwright install
          
      - name: Run E2E tests
        run: npx playwright test
        env:
          BASE_URL: ${{ secrets.PRODUCTION_URL }}
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
